name: Cargo-C StaticLib Build

on:
  schedule:
    - cron: "0 0 * * *"   # 每天 UTC 0:00
  workflow_dispatch:

permissions:
  contents: write   # 允許上傳 release

jobs:
  build-x86_64:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Set up NASM
        uses: ilammy/setup-nasm@v1
        
      - name: Install cargo-c
        run: cargo install cargo-c

      - name: Build staticlib with cargo-c
        run: |
          cargo cbuild --release --target x86_64-pc-windows-msvc --library-type staticlib

      - name: Package artifacts
        shell: pwsh
        run: |
          $src  = "target\x86_64-pc-windows-msvc\release"
          $dst  = "rav1e-x86_64.zip"

          Compress-Archive -Path "$src\*" -DestinationPath $dst -Force
    
      - name: Upload Clang build artifact
        uses: actions/upload-artifact@v4
        with:
          name: rav1e-x86_64
          path: ${{ github.workspace }}\dist\rav1e-x86_64.zip

  build-aarch64:
    runs-on: windows-11-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2.0.7
        with:
          arch: arm64
        
      - name: Install cargo-c
        run: cargo install cargo-c

      - name: Build staticlib with cargo-c
        run: |
          set CC=clang-cl
          set CXX=clang-cl
          cargo cbuild --release --target aarch64-pc-windows-msvc --library-type staticlib

      - name: Package artifacts
        shell: pwsh
        run: |
          $src = "target\aarch64-pc-windows-msvc\release"
          $dst = "rav1e-aarch64.zip"

          Compress-Archive -Path "$src\*" -DestinationPath $dst -Force

      - name: Upload Clang build artifact
        uses: actions/upload-artifact@v4
        with:
          name: rav1e-aarch64
          path: ${{ github.workspace }}\dist\rav1e-aarch64.zip
  upload-release:
    runs-on: ubuntu_latest
    needs: [build-x86_64, build-aarch64]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: Create Git Tag
        run: |
          DATE=$(date -u +"%Y-%m-%d-%H-%M-%S")
          TAG_NAME="autobuild-${DATE}"
          RELEASE_NAME="rav1e Auto Build ${DATE}"

          # Export to GitHub Actions environment
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV
        
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git tag $TAG_NAME
          git push origin $RELEASE_NAME

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          files: |
            ./rav1e-x86_64.zip
            ./rav1e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        
